apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

group = 'expo.modules.assetpackdelivery'
version = '0.1.0'



// If you want to use the managed Android SDK versions from expo-modules-core, set this to true.
// The Android SDK versions will be bumped from time to time in SDK releases and may introduce breaking changes in your module code.
// Most of the time, you may like to manage the Android SDK versions yourself.
def useManagedAndroidSdkVersions = false
if (useManagedAndroidSdkVersions) {
  useDefaultAndroidSdkVersions()
} else {
  buildscript {
    def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
    if (expoModulesCorePlugin.exists()) {
      apply from: expoModulesCorePlugin
      applyKotlinExpoModulesCorePlugin()
//      useCoreDependencies()
//      useExpoPublishing()
    }
    // Simple helper that allows the root project to override versions declared by this library.
    ext.safeExtGet = { prop, fallback ->
      rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }

    ext.getKotlinVersion = {
      if (ext.has("kotlinVersion")) {
        ext.kotlinVersion()
      } else {
        ext.safeExtGet("kotlinVersion", "1.6.10")
      }
    }

    dependencies {
      classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${getKotlinVersion()}")
    }
  }

  project.android {
    compileSdkVersion safeExtGet("compileSdkVersion", 35)
    defaultConfig {
      minSdkVersion safeExtGet("minSdkVersion", 21)
      targetSdkVersion safeExtGet("targetSdkVersion", 35)
    }
  }
}

android {
  namespace "expo.modules.assetpackdelivery"
  defaultConfig {
    versionCode 1
    versionName "0.1.0"
  }
  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation project(':expo-modules-core')
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${getKotlinVersion()}"
  implementation 'com.google.android.play:asset-delivery:2.3.0'
  implementation 'com.google.android.play:asset-delivery-ktx:2.3.0'
}
